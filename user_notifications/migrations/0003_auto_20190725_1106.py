# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2019-07-25 11:06
from __future__ import unicode_literals
from django.apps import apps
from django.db import migrations



class Migration(migrations.Migration):

    def transfer_notifications(apps, schema_editor): 
        from toolz.curried import pipe, map
        from toolz import curry 
        from django.contrib.auth import get_user_model
        def transfer_and_link_notification(obj): 
            NewNotification = apps.get_model('user_notifications', 'UserNotification')
            User = apps.get_model('auth','user')
            actor = User.objects.get(id=obj.actor_object_id)
            recipient = User.objects.get(id=obj.recipient.id)
            target_models = {
                7: apps.get_model('tools', 'Tool'), 
                22: apps.get_model('tools', 'CategoryGroup'), 
                23: apps.get_model('tools', 'Story'),
                25: apps.get_model('comments', 'ThreadedComment'),

            }

            TargetModel = target_models[obj.target_content_type.id]
         
            try: 
                target = TargetModel.objects.get(id=obj.target_object_id).notification_target
            
                new_notification = NewNotification(
                    target_connection=target, 
                    level=obj.level, 
                    actor=actor, 
                    recipient=recipient,
                    unread=obj.unread, 
                    verb=obj.verb, 
                    description=obj.description, 
                    timestamp=obj.timestamp, 
                    public=obj.public, 
                    deleted=obj.deleted, 
                    emailed=obj.emailed, 
                    data=obj.data  
                )
                new_notification.save()
                return new_notification
            except Exception as e:
                print (e) 
                return
        

        OldNotification = apps.get_model('notifications', 'Notification')
        old_notifications= OldNotification.objects.all()

        transferred = list(map(transfer_and_link_notification, old_notifications))

    dependencies = [
        ('user_notifications', '0002_auto_20190725_1043'),
        ('tools', '0043_create_notification_targets'),
        ('comments', '0008_create_notification_targets'),
    ]

    operations = [
        migrations.RunPython(transfer_notifications)
    ]
